# Проверяем режим сбора профиля и работы правила
query AutoProfile($rule) from Auto_Profile {
    rule == $rule
}

# Проверяем, если ли в профиле такой пользователь
query CheckUsername($title, $username) from Risk_User_Logon_Correlation_Profile {
    access_type == $title
    and login == $username
}

# Проверяем, использовал ли пользователь раньше этот адрес
query CheckHost($title, $username, $src_ip) from Risk_User_Logon_Correlation_Profile {
    access_type == $title
    and login == $username
    and src_ip == $src_ip
}

event Anomaly_Logon_Application:
    key:
        event_src.host
    filter {
        filter::NotFromCorrelator()
        and event_src.title == ""
        and action == "login"
        and status == "success"
        and subject.account.name != null
        and src.host != null

        # Сверка с профилем
        and not filter::Check_Profile(
            event_src.title, # access_type
            lower(subject.account.name),
            string(src.ip),
            lower(src.host),
            lower(dst.host), # lower(event_src.host)
            null, # dst_path
            null # additional_data
        )

        and filter::CheckWL_Profiling("For_Profilling", lower(join([src.host, subject.account.name, event_src.host, event_src.title], "|")))
    }
    
rule For_Profilling: Anomaly_Logon_Application

    init {       
        # Если в таблице Auto_Profile нет правила, то считаем, что правило работает в режиме автопрофилирования
        $auto_profile = coalesce(select_query_first("AutoProfile", ["For_Profilling"], "auto_profiling"), 1)
        $labels = "CheckWL_Profiling"
    }
    
    on Anomaly_Logon_Application {
        $subject.account.name = subject.account.name
        $subject.account.domain = subject.account.domain
        $subject.account.session_id = subject.account.session_id
        $subject.account.id = subject.account.id
        $subject.account.privileges = subject.account.privileges
        
        $object.name = object.name
        $object.path = object.path
        $object.fullpath = object.fullpath
        $object.type = object.type
        $object.property = object.property
        $object.value = object.value
        $object.query = object.query
        $object.state = object.state

        $datafield1 = datafield1
        $datafield2 = datafield2
        $datafield3 = datafield3
        $datafield4 = datafield4
        $datafield5 = datafield5
        $datafield6 = datafield6
        $datafield7 = datafield7
        $datafield8 = datafield8
        $datafield9 = datafield9
        $datafield10 = datafield10
        $datafield11 = datafield11
        $datafield12 = datafield12
        $datafield13 = datafield13
        $datafield14 = datafield14
        $datafield15 = datafield15
        $datafield16 = datafield16
        $datafield17 = datafield17
        $datafield18 = datafield18
        $datafield19 = datafield19
        $datafield20 = datafield20

        $src.fqdn = src.fqdn
        $src.port = src.port
        $src.host = src.host
        $src.ip = src.ip
        $src.hostname = src.hostname
        $src.asset = src.asset
        $src.geo.org = src.geo.org
        $src.geo.country = src.geo.country

        $dst.asset = dst.asset
        $dst.host = dst.host
        $dst.ip = dst.ip
        $dst.hostname = dst.hostname
        $dst.fqdn = dst.fqdn
        $dst.port = dst.port
        $dst.mac = dst.mac

        $assigned_src_ip = assigned_src_ip

        $event_src.ip = event_src.ip
        $event_src.hostname = event_src.hostname
        $event_src.host = event_src.host
        $event_src.fqdn = event_src.fqdn
        $event_src.asset = event_src.asset
        $event_src.title = event_src.title
        $event_src.subsys = event_src.subsys
        $event_src.vendor = event_src.vendor
        $event_src.category = event_src.category
        $event_src.rule = event_src.rule
        
        # Проверяем отличие от профиля
        if not exec_query("CheckUsername", [lower(event_src.title), lower(subject.account.name)]) then
            $reason = "no_user"
            $importance = "medium"
        elif not exec_query("CheckHost", [lower(event_src.title), lower(subject.account.name), string(src.ip)]) then
            $reason = "new_address"
            $importance = "medium"
        else
            $importance = "info"
            $detect = "drop" 
        endif 
        
        # Если правило работает в режиме сбора профиля, то emit не нужен
        if $auto_profile == 2 then
            $importance = "info"
            $detect = "drop"
        endif 

        $alert.key = lower(join([src.host, subject.account.name, event_src.host, event_src.title], "|"))
        $alert.context = $reason
    }

    insert_into Risk_User_Logon_Correlation_Profile if $auto_profile != 0 {
        login = lower($subject.account.name)    
        access_type = $event_src.title
        src_ip = string($src.ip)
        src_host = lower($src.host)
        dst_ip = coalesce(string($dst.ip),string($event_src.ip))
        dst_host = coalesce(lower($dst.host),lower($event_src.host))
        dst_path = ""
        additional_data = ""
    }
   
emit {
    $correlation_type = "event"

    $subject = "account"
    $action = "login"
    $object = "application"
    $status = "success"
        
    $category.generic = "Anomaly"
    $category.high = "Lateral Movement"
    $category.low = "Remote Services"

    $incident.aggregation.key = join([$correlation_name, $src.ip, $subject.account.name], "|")
    $incident.severity = if $importance == "info" then "low" else $importance endif
    $incident.category = "Undefined"
    $incident.aggregation.timeout = 2h
}
